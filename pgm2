#include <iostream>
using namespace std;

// Recursive function for binary search
int binarySearch(int arr[], int left, int right, int key) {
    if (left > right) 
        return -1;
    
    int mid = left + (right - left) / 2;
    
    if (arr[mid] == key)
        return mid;
    else if (arr[mid] > key)
        return binarySearch(arr, left, mid - 1, key);
    else
        return binarySearch(arr, mid + 1, right, key);
}

int main() {
    int size;
    cout << "Enter the number of elements: ";
    cin >> size;
    
    int arr[size];
    cout << "Enter the elements of the sorted array: ";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    
    int key;
    cout << "Enter the element to search: ";
    cin >> key;
    
    int result = binarySearch(arr, 0, size - 1, key);
    
    if (result != -1)
        cout << "Element found at index " << result << endl;
    else
        cout << "Element not found." << endl;
    
    return 0;
}



#include <iostream>
using namespace std;

// Non-recursive function for binary search
int binarySearch(int arr[], int size, int key) {
    int left = 0, right = size - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        
        if (arr[mid] == key)
            return mid;
        else if (arr[mid] > key)
            right = mid - 1;
        else
            left = mid + 1;
    }
    return -1;
}

int main() {
    int size;
    cout << "Enter the number of elements: ";
    cin >> size;
    
    int arr[size];
    cout << "Enter the elements of the sorted array: ";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    
    int key;
    cout << "Enter the element to search: ";
    cin >> key;
    
    int result = binarySearch(arr, size, key);
    
    if (result != -1)
        cout << "Element found at index " << result << endl;
    else
        cout << "Element not found." << endl;
    
    return 0;
}
